{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","clockTimer","state","date","Date","this","window","setInterval","setState","console","log","toLocaleTimeString","name","props","clearInterval","React","Component","App","isClockVisible","clockName","toggleClock","setRandomName","randomName","Math","floor","random","btnToggleText","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"8MAMaA,EAAb,4MACUC,gBADV,IAGEC,MAAQ,CACNC,KAAM,IAAIC,MAJd,uDAOE,WAAqB,IAAD,OAClBC,KAAKJ,WAAaK,OAAOC,aAAY,WACnC,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAG1BK,QAAQC,IAAI,EAAKR,MAAMC,KAAKQ,wBAC3B,OAbP,gCAgBE,YAAqC,IAAhBC,EAAe,EAAfA,KACfP,KAAKQ,MAAMD,OAASA,GAEtBH,QAAQC,IAAR,qCAA0CE,EAA1C,eAAqDP,KAAKQ,MAAMD,SAnBtE,kCAuBE,WACEE,cAAcT,KAAKJ,cAxBvB,oBA2BE,WACE,IAAQE,EAASE,KAAKH,MAAdC,KAER,OACE,oDACoBA,EAAKQ,4BAhC/B,GAA2BI,IAAMC,WCO3BC,G,kNACJf,MAAQ,CACNgB,gBAAgB,EAChBC,UAAW,G,EAGbC,YAAc,WACZ,EAAKZ,UAAS,kBAAyB,CAAEU,gBAA3B,EAAGA,oB,EAGnBG,cAAgB,WACd,IAAMC,EAAaC,KAAKC,MAAsB,IAAhBD,KAAKE,UAGnC,EAAKjB,SAAS,CAAEW,UAAWG,K,4CAG7B,WACE,MAGIjB,KAAKH,MAFPgB,EADF,EACEA,eACAC,EAFF,EAEEA,UAGIO,EAAgBR,EAAiB,aAAe,aAEtD,OACE,sBAAKS,UAAU,MAAf,UACE,6CACA,wBACEC,KAAK,SACLC,QAASxB,KAAKe,YAFhB,SAIGM,IAEH,wBACEE,KAAK,SACLC,QAASxB,KAAKgB,cAFhB,6BAMCH,GAAkB,cAAC,EAAD,CAAON,KAAMO,W,GAxCtBJ,IAAMC,YA8CTC,ICxDfa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6c6b8328.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number,\n};\n\nexport class Clock extends React.Component<Props> {\n  private clockTimer?: number;\n\n  state = {\n    date: new Date(),\n  };\n\n  componentDidMount() {\n    this.clockTimer = window.setInterval(() => {\n      this.setState({ date: new Date() });\n\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate({ name }: Props) {\n    if (this.props.name !== name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.clockTimer);\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <p>\n        {`Current time: ${date.toLocaleTimeString()}`}\n      </p>\n    );\n  }\n}\n","import React from 'react';\n\nimport { Clock } from './components';\n\nimport './App.scss';\n\ntype Props = {};\n\ninterface State {\n  isClockVisible: boolean,\n  clockName?: number,\n}\n\nclass App extends React.Component<Props, State> {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  };\n\n  toggleClock = () => {\n    this.setState(({ isClockVisible }) => ({ isClockVisible: !isClockVisible }));\n  };\n\n  setRandomName = () => {\n    const randomName = Math.floor(Math.random() * 100);\n\n    // eslint-disable-next-line\n    this.setState({ clockName: randomName });\n  };\n\n  render() {\n    const {\n      isClockVisible,\n      clockName,\n    } = this.state;\n\n    const btnToggleText = isClockVisible ? 'Hide Clock' : 'Show Clock';\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <button\n          type=\"button\"\n          onClick={this.toggleClock}\n        >\n          {btnToggleText}\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.setRandomName}\n        >\n          Set random name\n        </button>\n        {isClockVisible && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}